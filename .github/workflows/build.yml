name: Java CI with Maven

on:
  push:
    branches: master

jobs:
  build:

    runs-on: ubuntu-latest
    

    steps:
    - uses: actions/checkout@v2


#     - name: Build with Maven
#       run: |
#         mvn clean package
#         mvn clover:setup test
        
    - name: Build with Maven
      run: |
        mvn clean package
        mvn jacoco:report
      
#     - name: Run Coverage
#       run: |
#         mvn clover:clover

    - name: Run Coverage
      run: |
        mvn test
      
    - name: Upload Report
      uses: 'actions/upload-artifact@v2'
      with:
        name: report.xml
        path: ${{ github.workspace }}/target/site/jacoco/jacoco.xml
        
    - name: Upload HTML Report
      uses: 'actions/upload-artifact@v2'
      with:
        name: report.xml
        path: ${{ github.workspace }}/target/site/jacoco/jacoco.html
        
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'
        
        
    - name: Install dependencies
      run: npm install xml2js

    - name: Install Dependencies
      run: |
        npm install jsdom xpath

    - name: Calculate Coverage
      run: |
        node -e "
        var fs = require('fs');
        var xml2js = require('xml2js');
        var parser = new xml2js.Parser();
        fs.readFile('./target/site/jacoco/jacoco.xml', function(err, data) {
            parser.parseString(data, function (err, result) {
                var report = result.report;
                var package = report.package.find((pkg) => pkg.$.name === 'com/example/consumingwebservice');
                var file = package.sourcefile.find((file) => file.$.name === 'evClient.java');
                var lineRate = file.counter.find((counter) => counter.$.type === 'LINE').$.covered;
                console.log(lineRate);
            });
        });
        "


#     - name: Setup Python
#       uses: actions/setup-python@v2
#       with:
#         python-version: '3.x'
        
#     - name: Install dependencies
#       run: python -m pip install --upgrade pip lxml

#     - name: Extract and print coverage
#       run: |
#         python -c "
#         import lxml.etree as ET
#         tree = ET.parse('./target/site/clover/clover.xml')
#         root = tree.getroot()
#         path_to_client = 'evClient.java'
#         covered = sum(int(counter.get('covered')) for counter in root.iterfind('.//sourcefile[@name=\"'+ path_to_client +'\"]/counter[@type=\"LINE\"]'))
#         missed = sum(int(counter.get('missed')) for counter in root.iterfind('.//sourcefile[@name=\"'+ path_to_client +'\"]/counter[@type=\"LINE\"]'))
#         total = covered + missed
#         coverage = covered / total * 100
#         print(f'Lines covered for Client.java: {covered}/{total} ({coverage:.2f}%)')
#         "

#     - name: Extract and print coverage for Client
#       id: get_coverage
#       run: |
#         python -c "
#         import lxml.etree as ET
#         tree = ET.parse('./target/site/clover/clover.xml')
#         root = tree.getroot()
#         path_to_client = 'evClient.java'
#         file_element = root.find('.//file[@name=\"'+ path_to_client +'\"]')
#         if file_element is not None:
#             metrics = file_element.find('metrics')
#             statements = int(metrics.get('statements'))
#             covered_statements = int(metrics.get('coveredstatements'))
#             coverage = covered_statements / statements * 100
#         else:
#             coverage = 0
#         print(f'Lines covered for Client.java: {covered_statements}/{statements} ({coverage:.2f}%)')
#         "
